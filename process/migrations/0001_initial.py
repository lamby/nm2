# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-08-02 16:04
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('backend', '0021_auto_20170519_0924'),
    ]

    operations = [
        migrations.CreateModel(
            name='AMAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paused', models.BooleanField(default=False, help_text='Whether this process is paused and the AM is free to take another applicant in the meantime')),
                ('assigned_time', models.DateTimeField(help_text='When the assignment happened')),
                ('unassigned_time', models.DateTimeField(blank=True, help_text='When the unassignment happened', null=True)),
                ('am', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='backend.AM')),
                ('assigned_by', models.ForeignKey(help_text='Person who did the assignment', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-assigned_by'],
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_public', models.BooleanField(default=False)),
                ('logdate', models.DateTimeField(default=django.utils.timezone.now)),
                ('action', models.CharField(blank=True, help_text='Action performed with this log entry, if any', max_length=16)),
                ('logtext', models.TextField(blank=True, default='')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-logdate'],
            },
        ),
        migrations.CreateModel(
            name='Process',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applying_for', models.CharField(choices=[('dc', 'DC'), ('dc_ga', 'DC+account'), ('dm', 'DM'), ('dm_ga', 'DM+account'), ('dd_u', 'DD, upl.'), ('dd_nu', 'DD, non-upl.'), ('dd_e', 'DD, emeritus'), ('dd_r', 'DD, removed')], max_length=20, verbose_name='target status')),
                ('frozen_time', models.DateTimeField(blank=True, help_text='Date the process was frozen for review, or NULL if it is still being worked on', null=True)),
                ('approved_time', models.DateTimeField(blank=True, help_text='Date the process was reviewed and considered complete, or NULL if not yet reviewed', null=True)),
                ('closed', models.DateTimeField(blank=True, help_text='Date the process was closed, or NULL if still open', null=True)),
                ('fd_comment', models.TextField(blank=True, default='', verbose_name='Front Desk comments')),
                ('approved_by', models.ForeignKey(blank=True, help_text='Person that reviewed this process and considered it complete, or NULL if not yet reviewed', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('frozen_by', models.ForeignKey(blank=True, help_text='Person that froze this process for review, or NULL if it is still being worked on', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Requirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('intent', 'Declaration of intent'), ('sc_dmup', 'SC/DFSG/DMUP agreement'), ('advocate', 'Advocate'), ('keycheck', 'Key consistency checks'), ('am_ok', 'Application Manager report')], max_length=16, verbose_name='Requirement type')),
                ('approved_time', models.DateTimeField(blank=True, help_text='When the requirement has been approved', null=True)),
                ('approved_by', models.ForeignKey(blank=True, help_text='Set to the person that reviewed and approved this requirement', null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('process', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requirements', to='process.Process')),
            ],
            options={
                'ordering': ['type'],
            },
        ),
        migrations.CreateModel(
            name='Statement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statement', models.TextField(blank=True, verbose_name='Signed statement')),
                ('uploaded_time', models.DateTimeField(help_text='When the statement has been uploaded')),
                ('fpr', models.ForeignKey(help_text='Fingerprint used to verify the statement', on_delete=django.db.models.deletion.CASCADE, related_name='+', to='backend.Fingerprint')),
                ('requirement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statements', to='process.Requirement')),
                ('uploaded_by', models.ForeignKey(help_text='Person who uploaded the statement', on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='log',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='log', to='process.Process'),
        ),
        migrations.AddField(
            model_name='log',
            name='requirement',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='log', to='process.Requirement'),
        ),
        migrations.AddField(
            model_name='amassignment',
            name='process',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ams', to='process.Process'),
        ),
        migrations.AddField(
            model_name='amassignment',
            name='unassigned_by',
            field=models.ForeignKey(blank=True, help_text='Person who did the unassignment', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='requirement',
            unique_together=set([('process', 'type')]),
        ),
    ]
